#!/bin/sh
#set -e
#---------------------------------------------------------------------------------
#
#   Библиотека функций для busybox для  
#   автоматического отлавливания ошибок в коде скриптов 
#   и вывода на экран отладочной информации    
# 
#   Автор       : Железа
#   Email       : dev@zeleza.ru
#   Лицензия    : Apache Версия 2.0, январь 2004
# 
#   Создан      : 05 февраля 2024 год
#   Обновлен    : 05 февраля 2024 год
#
#	Зависит 	: ./status
#
#---------------------------------------------------------------------------------
#
#   Применение библиотеки:
#   
#   1. Подключаем библиотеку: source <путь_до_файла/err_trap> 
#   2. Подключаем функцию отлавливания ошибок:  catch_errors
#   3. В нужной функции, внутри ее тела задаем значение: GL_FUNC_NAME=${FUNCNAME}
# 
#---------------------------------------------------------------------------------

catch_errors() {
#---------------------------------------------------------------------------------
#   Устанавливаем функцию которая будет вызываться при ошибок в скрипте
#---------------------------------------------------------------------------------
 	set -Eeuo pipefail
    # здесь error_handler - функция ниже для вывода информации об ошибке
    # LINENO - системная переменная, указывает на номер строки в которой обнаружена ошибка
    # GL_FUNC_NAME - глобальная переменная, которую необходимо задавать в той функции,
    #    в которой желаете отловить ошибку в теле самой функции GL_FUNC_NAME=${FUNCNAME}
 	trap 'error_handler ${LINENO} "${GL_FUNC_NAME}"' ERR
 }


error_handler() {
#---------------------------------------------------------------------------------
#   Функция которая будет вызываться при ошибке в скрипте
#   и которая будет выводить информацию об ошибке
#---------------------------------------------------------------------------------
 	
 	# останавливаем бегунок, если он запущен 
  # и включаем курсор на экране
  stop_spinner

	local exit_code="$?"            # получаем код ошибки
	local line_number="$1"          # получаем номер строки ошибки
	local command="$2"              # получаем название функции, в которой произошла ошибка
  
  # Выводим сообщение на экран
  print_line
  printf "${RED}[ОШИБКА]${CL}в строке ${RED}${line_number}${CL}, код выхода ${RED}${exit_code}${CL} в функции \'${BLUE}${command}${CL}\'\n"
  print_line

}

format_setx(){
#---------------------------------------------------------------------------------
#   Функция задает формат вывода при включении режима отладки
#   командой 'set -x'. Будет выводится имя файла, номер строки
#   и дата + время
#   аргументы задаются строкой в любом порядке
#   следующими значениями
#   date - выводим время
#   file - выводим имя файла
#   номер строки будет выводится всегда.
#---------------------------------------------------------------------------------
  local dt=''; local fl=''
  echo "${*}" | grep -q date && dt=" $(date +\%D.\%T.\%-3N)::"
  echo "${*}" | grep -q file && fl="$(basename ${0}) "

  PS4="${dt}${fl}[${LINENO}]: "
}
